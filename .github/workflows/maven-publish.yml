# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
      branches: [ "master" ]
  pull_request:
      branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Clear Maven Cache
      run: |
        rm -rf $HOME/.m2/repository
    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: maven-${{ runner.os }}-${{ hashFiles('*/.xml') }}
        restore-keys: |
          maven-${{ runner.os }}-
    - name: Set environment variables
      run: |
        echo "USERNAME=${{ secrets.USERNAME }}" >> $GITHUB_ENV
        echo "TOKEN=${{ secrets.TOKEN }}" >> $GITHUB_ENV
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: test with Maven
      run: mvn install surefire:test package --file pom.xml

    - name: Build with Maven
      run: mvn -B clean package javadoc:javadoc --file pom.xml
  
    - name: Test with Maven
      run: mvn install surefire:test --file pom.xml
    - name: Publish Javadoc
      run: |
        mvn site --file pom.xml
        echo "Javadoc has been generated and can be found in the 'target/site/apidocs/' directory."

    # - name: Publish to GitHub Packages Apache Maven
    #   run: mvn clean install deploy -s $GITHUB_WORKSPACE/settings.xml
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
    #     USERNAME: ${{ secrets.USERNAME }}
    #     TOKEN: ${{ secrets.TOKEN }}
